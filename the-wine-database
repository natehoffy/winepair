-- --------------------------------------------------------------------------------------------------------
-- First, create the Wine database 
-- --------------------------------------------------------------------------------------------------------

CREATE DATABASE Wine;

-- --------------------------------------------------------------------------------------------------------
-- /* Create Colors table */
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Colors;

CREATE TABLE IF NOT EXISTS Colors (
	Color_Code INT NOT NULL auto_increment,
	Color_Name VARCHAR(10) NOT NULL,
	
	PRIMARY KEY (Color_Code)
);

# DESCRIBE Colors;

-- --------------------------------------------------------------------------------------------------------
-- /* Insert data into the Colors table */
-- --------------------------------------------------------------------------------------------------------

insert into colors (color_name)
	values
		('White'),
		('Red'),
		('Rose');
		
select * from colors;

-- --------------------------------------------------------------------------------------------------------
-- Create Country table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Country;

CREATE TABLE IF NOT EXISTS Country (
	Country_Code_Num INT NOT NULL,
	Country_Code_Alpha2 CHAR(2) NOT NULL,
	Country_Code_Alpha3 CHAR(3) NOT NULL,
	Country_Name VARCHAR(50) NOT NULL,
	
	PRIMARY KEY (Country_Code_Num),
	UNIQUE INDEX (Country_Code_Num),
	UNIQUE INDEX (Country_Code_Alpha2),
	UNIQUE INDEX (Country_Code_Alpha3),
	UNIQUE INDEX (Country_Name)
);

# DESCRIBE Country;

-- --------------------------------------------------------------------------------------------------------
-- Insert data into Country table
-- --------------------------------------------------------------------------------------------------------

insert into country (country_code_num,country_code_alpha2,country_code_alpha3,country_name)
	values
		(004,'AF','AFG','Afghanistan'),
		(248,'AX','ALA','Ã…land Islands'),
		(008,'AL','ALB','Albania'),
		(012,'DZ','DZA','Algeria'),
		(016,'AS','ASM','American Samoa'),
		(020,'AD','AND','Andorra'),
		(024,'AO','AGO','Angola'),
		(660,'AI','AIA','Anguilla'),
		(010,'AQ','ATA','Antarctica'),
		(028,'AG','ATG','Antigua and Barbuda'),
		(032,'AR','ARG','Argentina'),
		(051,'AM','ARM','Armenia'),
		(533,'AW','ABW','Aruba'),
		(036,'AU','AUS','Australia'),
		(040,'AT','AUT','Austria'),
		(031,'AZ','AZE','Azerbaijan'),
		(044,'BS','BHS','Bahamas'),
		(048,'BH','BHR','Bahrain'),
		(050,'BD','BGD','Bangladesh'),
		(052,'BB','BRB','Barbados'),
		(112,'BY','BLR','Belarus'),
		(056,'BE','BEL','Belgium'),
		(084,'BZ','BLZ','Belize'),
		(204,'BJ','BEN','Benin'),
		(060,'BM','BMU','Bermuda'),
		(064,'BT','BTN','Bhutan'),
		(068,'BO','BOL','Bolivia'),
		(535,'BQ','BES','Bonaire, Sint Eustatues and Saba'),
		(070,'BA','BIH','Bosnia and Herzegovina'),
		(072,'BW','BWA','Botswana'),
		(074,'BV','BVT','Bouvet Island'),
		(076,'BR','BRA','Brazil'),
		(086,'IO','IOT','British Indian Ocean Territory'),
		(096,'BN','BRN','Brunei Darussalam'),
		(100,'BG','BGR','Bulgaria'),
		(854,'BF','BFA','Burkina Faso'),
		(108,'BI','BDI','Burundi'),
		(132,'CV','CPV','Cabo Verde'),
		(116,'KH','KHM','Camboadia'),
		(120,'CM','CMR','Cameroon'),
		(124,'CA','CAN','Canada'),
		(136,'KY','CYM','Cayman Islands'),
		(140,'CF','CAF','Central African Republic'),
		(148,'TD','TCD','Chad'),
		(152,'CL','CHL','Chile'),
		(156,'CN','CHN','China'),
		(162,'CX','CXR','Christmas Island'),
		(166,'CC','CCK','Cocos Islands'),
		(170,'CO','COL','Colombia'),
		(174,'KM','COM','Comoros'),
		(180,'CD','COD','Democratic Republic of Congo'),
		(178,'CG','COG','Congo'),
		(184,'CK','COK','Cook Islands'),
		(188,'CR','CRI','Costa Rica'),
		(384,'CI','CIV','Ivory Coast'),
		(191,'HR','HRV','Croatia'),
		(192,'CU','CUB','Cuba'),
		(531,'CW','CUW','Curacao'),
		(196,'CY','CYP','Cyprus'),
		(203,'CZ','CZE','Czechia'),
		(208,'DK','DNK','Denmark'),
		(262,'DJ','DJI','Djibouti'),
		(212,'DM','DMA','Dominica'),
		(214,'DO','DOM','Dominican Republic'),
		(218,'EC','ECU','Ecuador'),
		(818,'EG','EGY','Egypt'),
		(222,'SV','SLV','El Salvador'),
		(226,'GQ','GNQ','Equatorial Guinea'),
		(232,'ER','ERI','Eritrea'),
		(233,'EE','EST','Estonia'),
		(231,'ET','ETH','Ethiopia'),
		(238,'FK','FLK','Falkland Islands'),
		(234,'FO','FRO','Faroe Islands'),
		(242,'FJ','FJI','Fiji'),
		(246,'FI','FIN','Finland'),
		(250,'FR','FRA','France'),
		(254,'GF','GUF','French Guiana'),
		(258,'PF','PYF','French Polynesia'),
		(260,'TF','ATF','French Souther Territories'),
		(266,'GA','GAB','Gabon'),
		(270,'GM','GMB','Gambia'),
		(268,'GE','GEO','Georgia'),
		(276,'DE','DEU','Germany'),
		(288,'GH','GHA','Ghana'),
		(292,'GI','GIB','Gibraltar'),
		(300,'GR','GRC','Greece'),
		(304,'GL','GRL','Greenland'),
		(308,'GD','GRD','Grenada'),
		(312,'GP','GLP','Guadeloupe'),
		(316,'GU','GUM','Guam'),
		(320,'GT','GTM','Guatemala'),
		(831,'GG','GGY','Guernsey'),
		(324,'GN','GIN','Guinea'),
		(624,'GW','GNB','Guinea-Bissau'),
		(328,'GY','GUY','Guyana'),
		(332,'HT','HTI','Haiti'),
		(334,'HM','HMD','Heard Island and McDonald Islands'),
		(336,'VA','VAT','Holy See'),
		(340,'HN','HND','Honduras'),
		(344,'HK','HKG','Hong Kong'),
		(348,'HU','HUN','Hungary'),
		(352,'IS','ISL','Iceland'),
		(356,'IN','IND','India'),
		(360,'ID','IDN','Indonesia'),
		(364,'IR','IRN','Iran'),
		(368,'IQ','IRQ','Iraq'),
		(372,'IE','IRL','Ireland'),
		(833,'IM','IMN','Isle of Man'),
		(376,'IL','ISR','Israel'),
		(380,'IT','ITA','Italy'),
		(388,'JM','JMA','Jamaica'),
		(392,'JP','JPN','Japan'),
		(832,'JE','JEY','Jersey'),
		(400,'JO','JOR','Jordan'),
		(398,'KZ','KAZ','Kazakhstan'),
		(404,'KE','KEN','Kenya'),
		(296,'KI','KIR','Kiribati'),
		(408,'KP','PRK','North Korea'),
		(410,'KR','KOR','South Korea'),
		(414,'KW','KWT','Kuwait'),
		(417,'KG','KGZ','Kyrgyzstan'),
		(418,'LA','LAO','Laos'),
		(428,'LV','LVA','Latvia'),
		(422,'LB','LBN','Lebanon'),
		(426,'LS','LSO','Lesotho'),
		(430,'LR','LBR','Liberia'),
		(434,'LY','LBY','Libya'),
		(438,'LI','LIE','Liechtenstein'),
		(440,'LT','LTU','Lithuania'),
		(442,'LU','LUX','Luxembourg'),
		(446,'MO','MAC','Macao'),
		(807,'MK','MKD','Macedonia'),
		(450,'MG','MDG','Madagascar'),
		(454,'MW','MWI','Malawi'),
		(458,'MY','MYS','Malaysia'),
		(462,'MV','MDV','Maldives'),
		(466,'ML','MLI','Mali'),
		(470,'MT','MLT','Malta'),
		(584,'MH','MHL','Marshall Islands'),
		(474,'MQ','MTQ','Martinique'),
		(478,'MR','MRT','Mauritania'),
		(480,'MU','MUS','Mauritius'),
		(175,'YT','MYT','Mayotte'),
		(484,'MX','MEX','Mexico'),
		(583,'FM','FSM','Micronesia'),
		(498,'MD','MDA','Moldova'),
		(492,'MC','MCO','Monaco'),
		(496,'MN','MNG','Mongolia'),
		(499,'ME','MNE','Montenegro'),
		(500,'MS','MSR','Montserrat'),
		(504,'MA','MAR','Morocco'),
		(508,'MZ','MOZ','Mozambique'),
		(104,'MM','MMR','Myanmar'),
		(516,'NA','NAM','Namibia'),
		(520,'NR','NRU','Nauru'),
		(524,'NP','NPL','Nepal'),
		(528,'NL','NLD','Netherlands'),
		(540,'NC','NCL','New Caledonia'),
		(554,'NZ','NZL','New Zealand'),
		(558,'NI','NIC','Nicaragua'),
		(562,'NE','NER','Niger'),
		(566,'NG','NGA','Nigeria'),
		(570,'NU','NIU','Niue'),
		(574,'NF','NFK','Norfolk Island'),
		(580,'MP','MNP','Northern Mariana Islands'),
		(578,'NO','NOR','Norway'),
		(512,'OM','OMN','Oman'),
		(586,'PK','PAK','Pakistan'),
		(585,'PW','PLW','Palau'),
		(275,'PS','PSE','Palestine'),
		(591,'PA','PAN','Panama'),
		(598,'PG','PNG','Papua New Guinea'),
		(600,'PY','PRY','Paraguay'),
		(604,'PE','PER','Peru'),
		(608,'PH','PHL','Philippines'),
		(612,'PN','PCN','Pitcairn'),
		(616,'PL','POL','Poland'),
		(620,'PT','PRT','Portugal'),
		(630,'PR','PRI','Puerto Rico'),
		(634,'QA','QAT','Qatar'),
		(638,'RE','REU','Reunion'),
		(642,'RO','ROU','Romania'),
		(643,'RU','RUS','Russia'),
		(646,'RW','RWA','Rwanda'),
		(652,'BL','BLM','Saint Barthelemy'),
		(654,'SH','SHN','Saint Helena'),
		(659,'KN','KNA','Saint Kitts and Nevis'),
		(662,'LC','LCA','Saint Lucia'),
		(663,'MF','MAF','Saint Martin'),
		(666,'PM','SPM','Saint Pierre and Miquelon'),
		(670,'VC','VCT','Saint Vincent and the Grenadines'),
		(882,'WS','WSM','Samoa'),
		(674,'SM','SMR','San Marino'),
		(678,'ST','STP','Sao Tome and Principe'),
		(682,'SA','SAU','Saudi Arabia'),
		(686,'SN','SEN','Senegal'),
		(688,'RS','SRB','Serbia'),
		(690,'SC','SYC','Seychelles'),
		(694,'SL','SLE','Sierra Leone'),
		(702,'SG','SGP','Singapore'),
		(534,'SX','SXM','Sint Maarten'),
		(703,'SK','SVK','Slovakia'),
		(705,'SI','SVN','Slovenia'),
		(090,'SB','SLB','Solomon Islands'),
		(706,'SO','SOM','Somalia'),
		(710,'ZA','ZAF','South Africa'),
		(239,'GS','SGS','South Georgia and the South Sandwich Islands'),
		(728,'SS','SSD','South Sudan'),
		(724,'ES','ESP','Spain'),
		(144,'LK','LKA','Sri Lanka'),
		(729,'SD','SDN','Sudan'),
		(740,'SR','SUR','Suriname'),
		(744,'SJ','SJM','Svalbard and Jan Mayen'),
		(748,'SZ','SWZ','Swaziland'),
		(752,'SE','SWE','Sweden'),
		(756,'CH','CHE','Switzerland'),
		(760,'SY','SYR','Syria'),
		(158,'TW','TWN','Taiwan'),
		(762,'TJ','TJK','Tajikistan'),
		(834,'TZ','TZA','Tanzania'),
		(764,'TH','THA','Thailand'),
		(626,'TL','TLS','Timor-Leste'),
		(768,'TG','TGO','Togo'),
		(772,'TK','TKL','Tokelau'),
		(776,'TO','TON','Tonga'),
		(780,'TT','TTO','Trinidad and Tobago'),
		(788,'TN','TUN','Tunisia'),
		(792,'TR','TUR','Turkey'),
		(795,'TM','TKM','Turkmenistan'),
		(796,'TC','TCA','Turks and Caicos'),
		(798,'TV','TUV','Tuvalu'),
		(800,'UG','UGA','Uganda'),
		(804,'UA','UKR','Ukraine'),
		(784,'AE','ARE','United Arab Emirates'),
		(826,'GB','GBR','United Kingdom'),
		(581,'UM','UMI','United States Minor Outlying Islands'),
		(840,'US','USA','United States of America'),
		(858,'UY','URY','Uruguay'),
		(860,'UZ','UZB','Uzbekistan'),
		(548,'VU','VUT','Vanuatu'),
		(862,'VE','VEN','Venezuela'),
		(704,'VN','VNM','Viet Nam'),
		(092,'VG','VGB','British Virgin Islands'),
		(850,'VI','VIR','U.S. Virgin Islands'),
		(876,'WF','WLF','Wallis and Futuna'),
		(732,'EH','ESH','Western Sahara'),
		(887,'YE','YEM','Yemen'),
		(894,'ZM','ZMB','Zambia'),
		(716,'ZW','ZWE','Zimbabwe');		

-- --------------------------------------------------------------------------------------------------------
-- Create Vintage table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Vintage;

CREATE TABLE IF NOT EXISTS Vintage (
	Vintage_Year INT NOT NULL,
	
	PRIMARY KEY (Vintage_Year)
);

# DESCRIBE Vintage;

-- --------------------------------------------------------------------------------------------------------
-- Create Food table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Food;

CREATE TABLE IF NOT EXISTS Food (
	Food_Code INT NOT NULL,
	Food_Name VARCHAR(50) NOT NULL,
	Food_Type VARCHAR(50),
	
	PRIMARY KEY (Food_Code)
);

# DESCRIBE Food;

-- --------------------------------------------------------------------------------------------------------
-- Create Occassion table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Occassion;

CREATE TABLE IF NOT EXISTS Occassion (
	Occassion_Code INT NOT NULL,
	Occassion_Name VARCHAR(50),
	Occassion_Type VARCHAR(50) NOT NULL,
	
	PRIMARY KEY (Occassion_Code)
);

# DESCRIBE Occassion;

-- --------------------------------------------------------------------------------------------------------
-- Create Appellation table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Appellation;

CREATE TABLE IF NOT EXISTS Appellation (
	Appellation_Code INT NOT NULL,
	Appellation_Name VARCHAR(100) NOT NULL,
	Appellation_Country_Code_Num INT NOT NULL,
	Appellation_Country_Code_Alpha2 CHAR(2) NOT NULL,
	Appellation_Country_Code_Alpha3 CHAR(3) NOT NULL,
	
	PRIMARY KEY (Appellation_Code),
	UNIQUE INDEX (Appellation_Country_Code_Num),
	UNIQUE INDEX (Appellation_Country_Code_Alpha2),
	UNIQUE INDEX (Appellation_Country_Code_Alpha3),
	UNIQUE INDEX (Appellation_Name),
	UNIQUE INDEX (Appellation_Code),
	
	FOREIGN KEY (Appellation_Country_Code_Num) REFERENCES Country(Country_Code_Num) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Appellation_country_Code_Alpha2) REFERENCES Country(Country_Code_Alpha2) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Appellation_Country_Code_Alpha3) REFERENCES Country(Country_Code_Alpha3) ON DELETE CASCADE ON UPDATE CASCADE
);

# DESCRIBE Appellation;

-- --------------------------------------------------------------------------------------------------------
-- Create Winery table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Winery;

CREATE TABLE IF NOT EXISTS Winery (
	Winery_Code INT NOT NULL,
	Winery_Name VARCHAR(100) NOT NULL,
	Winery_Description TEXT,
	Winery_Street VARCHAR(50) NOT NULL,
	Winery_City VARCHAR(50) NOT NULL,
	Winery_State VARCHAR(50),
	Winery_Postal_Code VARCHAR(10) NOT NULL,
	Winery_Country_Name VARCHAR(50) NOT NULL,
	Winery_Appellation_Name VARCHAR(100) NOT NULL,
	
	PRIMARY KEY (Winery_Code),
	UNIQUE INDEX (Winery_Country_Name),
	UNIQUE INDEX (Winery_Appellation_Name),
	UNIQUE INDEX (Winery_Code),
	
	FOREIGN KEY (Winery_Country_Name) REFERENCES Country(Country_Name) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Winery_Appellation_Name) REFERENCES Appellation(Appellation_Name) ON DELETE CASCADE ON UPDATE CASCADE
);

# DESCRIBE Winery;

-- --------------------------------------------------------------------------------------------------------
-- Create Vineyards table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Vineyard;

CREATE TABLE IF NOT EXISTS Vineyard (
	Vineyard_Code INT NOT NULL,
	Vineyard_Winery_Code INT NOT NULL,
	Vineyard_Name VARCHAR(100) NOT NULL,
	Vineyard_Street VARCHAR(50) NOT NULL,
	Vineyard_City VARCHAR(50) NOT NULL,
	Vineyard_State VARCHAR(50),
	Vineyard_Postal_Code VARCHAR(10) NOT NULL,
	Vineyard_Country_Name VARCHAR(50) NOT NULL,
	Vineyard_Appellation_Name VARCHAR(100) NOT NULL,

	
	
	PRIMARY KEY (Vineyard_Code),
	UNIQUE INDEX (Vineyard_Code),
	UNIQUE INDEX (Vineyard_Winery_Code),
	UNIQUE INDEX (Vineyard_Country_Name),
	UNIQUE INDEX (Vineyard_Appellation_Name),
	
	FOREIGN KEY (Vineyard_Winery_Code) REFERENCES Winery(Winery_Code) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Vineyard_Country_Name) REFERENCES Country(Country_Name) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Vineyard_Appellation_Name) REFERENCES Appellation(Appellation_Name) ON DELETE CASCADE ON UPDATE CASCADE
);

# DESCRIBE Vineyard;

-- --------------------------------------------------------------------------------------------------------
-- Create Grape_Variety table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Grape_Variety;

CREATE TABLE IF NOT EXISTS Grape_Variety (
	Grape_Variety_Code INT NOT NULL,
	Grape_Country INT NOT NULL,
	Grape_Appellation INT NOT NULL,
	Grape_Variety_Name VARCHAR(50) NOT NULL,
	
	PRIMARY KEY (Grape_Variety_Code),
	UNIQUE INDEX (Grape_Variety_Code),
	UNIQUE INDEX (Grape_Country),
	UNIQUE INDEX (Grape_Appellation),
	
	FOREIGN KEY (Grape_Country) REFERENCES Country(Country_Code_Num) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Grape_Appellation) REFERENCES Appellation(Appellation_Code) ON DELETE CASCADE ON UPDATE CASCADE
);

#DESCRIBE Grape_Variety;

-- --------------------------------------------------------------------------------------------------------
-- Create Wine table
-- --------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS Wine;

CREATE TABLE IF NOT EXISTS Wine (
	Wine_Code INT NOT NULL,
	Wine_Color_Code INT NOT NULL,
	Wine_Country_Code_Num INT NOT NULL,
	Grape_Variety_Code INT NOT NULL,
	Wine_Appellation_Code INT NOT NULL,
	Wine_Vineyard_Code INT NOT NULL,
	Wine_Vintage INT NOT NULL,
	Wine_Food_Code INT NOT NULL,
	Wine_Occassion_Code INT NOT NULL,
	Wine_Name VARCHAR(50),
	Wine_Price DECIMAL NOT NULL,
	Years_Lay_Down INT NOT NULL,
	
	PRIMARY KEY (Wine_Code),
	UNIQUE INDEX (Wine_Code),
	
	FOREIGN KEY (Wine_Color_Code) REFERENCES Colors(Color_Code) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Wine_Country_Code_Num) REFERENCES Country(Country_Code_Num) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Grape_Variety_Code) REFERENCES Grape_Variety(Grape_Variety_Code) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Wine_Appellation_Code) REFERENCES Appellation(Appellation_Code) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Wine_Vineyard_Code) REFERENCES Vineyard(Vineyard_Code) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Wine_Vintage) REFERENCES Vintage(Vintage_Year) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Wine_Food_Code) REFERENCES Food(Food_Code) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Wine_Occassion_Code) REFERENCES Occassion(Occassion_Code) ON DELETE CASCADE ON UPDATE CASCADE
);

# DESCRIBE Wine;


