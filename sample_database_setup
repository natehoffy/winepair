IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BookBookshelf')
BEGIN
    DROP TABLE BookBookshelf
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Bookshelf')
BEGIN
    DROP TABLE Bookshelf
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BookBookSubject')
BEGIN
    DROP TABLE BookBookSubject
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BookAuthor')
BEGIN
    DROP TABLE BookAuthor
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Book')
BEGIN
    DROP TABLE Book
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Publisher')
BEGIN
    DROP TABLE Publisher
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BookSubject')
BEGIN
    DROP TABLE BookSubject
END
GO

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Author')
BEGIN
    DROP TABLE Author
END
GO

CREATE TABLE Bookshelf (
    BookshelfID int identity primary key,
    ShelfNumber char(20) not null
)
GO

CREATE TABLE Publisher (
    PublisherID int identity primary key,
    PublisherName char(40) not null
)
GO

CREATE TABLE BookSubject (
    SubjectID int identity,
    SubjectText char(50) not null,
    CONSTRAINT pk_BookSubject PRIMARY KEY (SubjectID)
)
GO

CREATE TABLE Author (
    AuthorID int identity,
    ForeName char(30) not null,
    SurName char(30) not null,
    LOCName char(100) not null,
)
GO

ALTER TABLE Author
    ADD CONSTRAINT pk_Author PRIMARY KEY (AuthorID)
    
CREATE TABLE Book (
    BookID int identity primary key,
    Title char(50) not null,
    ISBN char(13) not null,
    PublishDate datetime not null,
    PublisherID int FOREIGN KEY REFERENCES Publisher(PublisherID),
)
GO

CREATE TABLE BookBookSubject (
    BookBookSubjectID int identity primary key,
    BookID int FOREIGN KEY REFERENCES Book(BookID) not null,
    SubjectID int not null,
    CONSTRAINT fk_bbs_bs FOREIGN KEY SubjectID REFERENCES BookSubject(SubjectID)
)
GO

CREATE TABLE BookBookshelf (
    BookBookshelfID int identity primary key,
    BookID int FOREIGN KEY REFERENCES Book(BookID) not null,
    BookshelfID int FOREIGN KEY REFERENCES Bookshelf(BookshelfID) not null
)
GO

CREATE TABLE BookAuthor (
    BookAuthorID int identity primary key,
    BookID int FOREIGN KEY REFERENCES Book(BookID) not null,
    AuthorID int FOREIGN KEY REFERENCES AUthor(AuthorID) not null
)
GO

ALTER TABLE BookAuthor ADD
    CONSTRAINT uk_ba UNIQUE (BookID, AuthorID)
GO

-- ------------------------------------------------------------------
-- INSERT Statements
-- ------------------------------------------------------------------

INSERT INTO Bookshelf (ShelfNumber) VALUES
    ('1')
    , ('2')
    , ('Office')
    , ('Family Room')
    
GO

SELECT TOP 1000 [BookshelfID]
        , [ShelfNumber]
    FROM [IST659].[dbo].[Bookshelf]
    
INSERT INTO Bookshelf (ShelfNumber) VALUES
    ('Bedroom')
    
INSERT INTO Author (Forename, Surname, LOCName)
VALUES ('Bryan','Syverson','Bryan Syverson')

-- ------------------------------------------------------------------
-- SELECT Statements
-- ------------------------------------------------------------------

SELECT * FROM Author

# the above will give us everything in Author table

SELECT
    Forename,
    Surname,
    LOCName
FROM Author

# the above gives us only columns listed

SELECT
    Surname + ',' + Forename AS FullName,
    LOCName
FROM Author

# the above concatenates Surname & Forename and makes FullName

SELECT
    RTRIM(Surname) + ',' + RTRIM(Forename) AS FullName,
    LOCName
FROM Author

# RTRIM trims up the field that we had stored as a CHAR variable type so there aren't a bunch of spaces in the output

SELECT ShelfNumber FROM Bookshelf

-- ------------------------------------------------------------------
-- JOIN Statements
-- ------------------------------------------------------------------

SELECT
    Book.Title,
    Book.ISBN,
    Book.PublisherID,
    Book.PublisherName
FROM Book
JOIN Publisher ON Publisher.PublisherID /* Primary key of joining db */ = Book.PublisherId /* foreign key of joined db */

-- ------------------------------------------------------------------
-- UPDATE Statements
-- ------------------------------------------------------------------

SELECT * FROM Book
JOIN BookBookshelf ON BookBookshelf.BookID = Book.BookID
JOIN Bookshelf ON Bookshelf.BookshelfID = BookBookshelf.BookshelfID

UPDATE BookBookshelf SET BookshelfID = 2 WHERE BookBookshelfID = 3

UPDATE Book SET PublishDate = '1/1/2012' WHERE BookID = 1
UPDATE Book SET PublishDate = '1/1/2013' WHERE BookID = 2
UPDATE Book SET PublishDate = '1/1/2010' WHERE BookID = 3
UPDATE Book SET PublishDate = '1/1/2015' WHERE BookID = 4
UPDATE Book SET PublishDate = '1/1/2011' WHERE BookID = 5
UPDATE Book SET PublishDate = '1/1/2013' WHERE BookID = 6

-- ------------------------------------------------------------------
-- DELETE Statements
-- ------------------------------------------------------------------

# DELETE table_name [WHERE condition]. cannot delete where dependencies exist

DELETE Bookshelf WHERE ShelfNumber = 'Office'

DELETE Bookshelf WHERE ShelfNumber = '1'











